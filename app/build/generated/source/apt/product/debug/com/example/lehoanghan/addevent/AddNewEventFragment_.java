//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.0.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.example.lehoanghan.addevent;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import com.example.lehoanghan.appcalendar.R;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class AddNewEventFragment_
    extends com.example.lehoanghan.addevent.AddNewEventFragment
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.activity_add_event, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        etEventName = null;
        tvSetDayFrom = null;
        tvSetTimeFrom = null;
        tvSetDayTo = null;
        tvSetTimeTo = null;
        actvPlace = null;
        mactvAddFriend = null;
        spnRepeat = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static AddNewEventFragment_.FragmentBuilder_ builder() {
        return new AddNewEventFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.etEventName = ((EditText) hasViews.findViewById(R.id.activity_add_event_et_event_name));
        this.tvSetDayFrom = ((TextView) hasViews.findViewById(R.id.activity_add_event_tv_set_day_from));
        this.tvSetTimeFrom = ((TextView) hasViews.findViewById(R.id.activity_add_event_tv_set_time_from));
        this.tvSetDayTo = ((TextView) hasViews.findViewById(R.id.activity_add_event_tv_set_day_to));
        this.tvSetTimeTo = ((Button) hasViews.findViewById(R.id.activity_add_event_tv_set_time_to));
        this.actvPlace = ((AutoCompleteTextView) hasViews.findViewById(R.id.activity_add_event_actv_place));
        this.mactvAddFriend = ((AutoCompleteTextView) hasViews.findViewById(R.id.activity_add_event_mactv_add_friend));
        this.spnRepeat = ((Spinner) hasViews.findViewById(R.id.activity_add_event_spn_repeat));
        View view_activity_add_event_btn_set_day_from = hasViews.findViewById(R.id.activity_add_event_btn_set_day_from);
        View view_activity_add_event_btn_set_time_from = hasViews.findViewById(R.id.activity_add_event_btn_set_time_from);
        View view_activity_add_event_btn_set_day_to = hasViews.findViewById(R.id.activity_add_event_btn_set_day_to);
        View view_activity_add_event_btn_set_time_to = hasViews.findViewById(R.id.activity_add_event_btn_set_time_to);

        if (view_activity_add_event_btn_set_day_from!= null) {
            view_activity_add_event_btn_set_day_from.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AddNewEventFragment_.this.btnSetDayFromClicked();
                }
            }
            );
        }
        if (view_activity_add_event_btn_set_time_from!= null) {
            view_activity_add_event_btn_set_time_from.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AddNewEventFragment_.this.btnSetTimeFromChecked();
                }
            }
            );
        }
        if (view_activity_add_event_btn_set_day_to!= null) {
            view_activity_add_event_btn_set_day_to.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AddNewEventFragment_.this.btnSetDayToChecked();
                }
            }
            );
        }
        if (view_activity_add_event_btn_set_time_to!= null) {
            view_activity_add_event_btn_set_time_to.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    AddNewEventFragment_.this.btnSetTimeToClicked();
                }
            }
            );
        }
        init();
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<AddNewEventFragment_.FragmentBuilder_, com.example.lehoanghan.addevent.AddNewEventFragment>
    {

        @Override
        public com.example.lehoanghan.addevent.AddNewEventFragment build() {
            AddNewEventFragment_ fragment_ = new AddNewEventFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
